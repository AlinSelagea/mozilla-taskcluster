documentdb:
  database: treeherder-proxy

treeherder:
  apiUrl: https://treeherder.mozilla.org/api/

taskcluster:
  credentials: {}

treeherderTaskcluster:
  routePrefix: tc-treeherder
  prefetch: 200

treeherderProxy:
  port: 60025

redis: {}
pulse: {}

kue:
  admin:
    port: 60024

repositoryMonitor:
  interval: 2000
  maxPushFetches: 200

commitPublisher:
  title: |
    Pushlog Commit Events
  description: |
    The pushlog events can be used to hook various other components into
    the act of commiting to a particuar repository (usually to kick off tests)
    this exchange is hopefuly a short lived thing which abstracts polling the
    pushlog for new data.

    Pushes will be monitored (via polling) and events will be sent as new data
    is available. If for some reason the service goes down previous commits
    will also be fetched and any missing data (up to a particular amount) will
    be sent as events...

try:
  # Default url used when figuring out where to fetch task graph has some special
  # mustache parameters used to customize the path.
  #
  #   - alias: current key name
  #   - revision: revision of the change
  #   - path: sub path to repository
  #   - host: host of repository
  #
  defaultUrl: "{{{host}}}{{{path}}}/raw-file/{{revision}}/testing/taskcluster/tasks/decision/{{alias}}.yml"

  # Default scopes to use for projects which have no specific scopes of their own.
  defaultScopes:
    - queue:*
    - docker-worker:*
    - scheduler:*

  projects:
    # Try is the definitive example:
    try: # Note the keys match the "alias" which treeherder defines.
      # The url overrides the default url mapping and may include same mustache
      # parameters...
      # url: ...

      # The commit _must_ contain +tc to be scheduled...
      contains: '+tc'

      # The graph will be restricted to the following scopes this should ideally be
      # as locked down as possible.
      # scopes: []
    b2g-inbound:
      url: "{{{host}}}{{{path}}}/raw-file/{{revision}}/testing/taskcluster/tasks/decision/branch.yml"

